# Mesh related options
[Mesh]

    # A 1x1 size mesh with 8x8 second order elements to start with
    [./Generation]
      dimension = '2'
      n_elems_x = '8'
      n_elems_y = '8'
      x_min = '0.0'
      x_max = '1.0'
      y_min = '0.0'
      y_max = '1.0'
      element_type = 'QUAD9'

[]

# We need extra quadrature for handling integration of the particularly stiff forcing function
[Strategies]
   [./Assembly]
      # Value must be >= 0
      extra_quadrature_order = 15

   [../MeshAdaptivity]
      mesh_adaptive = 'true'
      absolute_global_tolerance = '0.0'
      refine_percentage = 0.1
      max_refinement_steps = '5'

   [../ErrorEstimation]
      estimator_type = 'adjoint_refinement'
      compute_qoi_error_estimate = 'true'
[]

#Linear and nonlinear solver options
[linear-nonlinear-solver]
   max_nonlinear_iterations = 5
   max_linear_iterations = 1000
   initial_linear_tolerance = 1e-4
   minimum_linear_tolerance = 1e-6

   verify_analytic_jacobians = 1.e-6
[]

[vis-options]
   output_vis = 'false'
   vis_output_file_prefix = 'poisson_stiff_forcing'
   output_format = 'ExodusII xda'
   output_adjoint = 'false'
[]

[Materials]
   [./TestMaterial]
      [./ThermalConductivity]
         model = 'constant'
         value = '100.0'
      [../Density]
         value = '1.0'
      [../SpecificHeat]
         model = 'constant'
         value = '1.0'
[]

[Output]
   [./Display]
      print_qoi = 'true'
   [../]
[]

# Options for print info to the screen
[screen-options]
   print_equation_system_info = 'true'
   print_mesh_info = 'true'
   print_log_info = 'true'
   solver_verbose = 'true'
   solver_quiet = 'false'

   echo_physics = 'true'
   echo_qoi = 'true' # which QoIs activated
[]

[Physics]

   enabled_physics = 'HeatConduction ParsedSourceTerm'

   [./HeatConduction]

      material = 'TestMaterial'

   [../ParsedSourceTerm]
      [./Function]
         value = 'alpha:=${Materials/TestMaterial/ThermalConductivity/value};-alpha * ( ( (- 4 * alpha * alpha) * exp(-alpha*x) * y * (1 - y) ) + ( -8 + ( 8 * exp(-alpha*x) ) + ( 8 * ( 1 - exp(-alpha) )* x) ) )'
      [../Variables]
         names = 'T'
         FE_types = 'LAGRANGE'
         FE_orders = 'SECOND'
[]

[BoundaryConditions]
   bc_ids = '0:1:2:3'
   bc_id_name_map = 'Boundary'

   [./Boundary]
      [./Temperature]
         type = 'constant_dirichlet'
         T = '0'
[]

[Variables]
   [./Temperature]
      names = 'T'
      fe_family = 'LAGRANGE'
      order = 'SECOND'
[]

[QoI]
   enabled_qois = 'weighted_flux'

   [./WeightedFlux]
      variables = 'T'
      bc_ids = '0'
      weights = 'x*(1-x)'
[]
